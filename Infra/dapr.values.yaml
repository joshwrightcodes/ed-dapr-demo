# Dapr Helm Config https://github.com/dapr/dapr/blob/master/charts/dapr/README.md
global:
#  registry: docker.io/daprio              # Docker image registry
#  tag: latest                             # Docker image version tag
  logAsJson: true                         # Json log format for control plane services
#  imagePullPolicy: IfNotPresent           # Global Control plane service imagePullPolicy
#  imagePullSecrets:                       # Control plane service images pull secrets for docker registry
  ha:
    enabled: true                         # Highly Availability mode enabled for control plane
#    replicaCount: 3                       # Number of replicas of control plane services in Highly Availability mode
#    disruption:
#      minimumAvailable:                   # Minimum amount of available instances for control plane. This can either be effective count or %.
#      maximumUnavailable: 25%             # Maximum amount of instances that are allowed to be unavailable for control plane. This can either be effective count or %.
#  prometheus:
#    enabled: true                         # Prometheus metrics enablement for control plane services
#    port: 9090                            # Prometheus scrape http endpoint port
#  mtls:
#    enabled: true                         # Mutual TLS enablement
#    workloadCertTTl: 24h                  # TTL for workload cert
#    allowedClockSkew: 15m                 # Allowed clock skew for workload cert rotation
#  dnsSuffix: .cluster.local               # Kuberentes DNS suffix
#  daprControlPlaneOs: linux               # Operating System for Dapr control plane
  daprControlPlainArch: arm64             # CPU Architecture for Dapr control plane
#  nodeSelector: {}                        # Pods will be scheduled onto a node node whose labels match the nodeSelector
#  tolerations: {}                         # Pods will be allowed to schedule onto a node whose taints match the tolerations
#  labels: {}                              # Custom pod levels
  
#dapr_dashboard:
#  replicaCount: 1                         # Number of replicas
#  logLevel: info                          # Service Log level
#  image:    
#    registry: docker.io/daprio            # Docker registry
#    imagePullSecrets:                     # Docker images pull secrets for docker registry
#    name: dashboard                       # Docker image name
#    tag: "0.6.0"                          # Docker image tag
#  serviceType: ClusterIP                  # Type of Kubernetes service to use for the Dapr Dashboard service
#  runAsNonRoot: true                      # Boolean value for `securityContext.runAsNonRoot`. You may have to set this to `false` when running in Minikube
#  resources: {}                           # Value of `resources` attribute. Can be used to set memory/cpu resources/limits. See the section "Resource configuration" above. Defaults to empty

#dapr_operator:
#  replicaCount: 1                         # Number of replicas
#  logLevel: info                          # Log level
#  watchInterval: 0                        # Interval for polling pods' state (e.g. `2m`). Set to `0` to disable, or once to only run once when the operator starts
#  maxPodRestartsPerMinute: 20             # Maximum number of pods in an invalid state that can be restarted per minute
#  image:
#    name: dapr                            # Docker image name (`global.registry/dapr_operator.image.name`)
#  runAsNonRoot: true                      # Boolean value for `securityContext.runAsNonRoot`. You may have to set this to `false` when running in Minikube
#  resources:                              # Value of resources attribute. Can be used to set memory/cpu resources/limits. See the section "Resource configuration" above. Defaults to empty
#    requests:
#      memory: 200Mi
#  debug:
#    enabled: false                        # Boolean value for enabling debug mode

#dapr_placement:
#  replicationFactor: 100                  # Number of consistent hashing virtual node
#  logLevel: info                          # Service Log level
#  image:
#    name: dapr                            # Docker image name (`global.registry/dapr_operator.image.name`)
#  cluster:
#    forceInMemoryLog: false               # Use in-memory log store and disable volume attach when `global.ha.enabled` is true  
#    logStorePath: /var/run/dapr/raft-log  # Mount path for persistent volume for log store in unix-like system when `global.ha.enabled` is true    
#    logStoreWinPath: C:\\raft-log         # Mount path for persistent volume for log store in windows when `global.ha.enabled` is true
#  volumeclaims:
#    storageSize: 1Gi                      # Attached volume size
#    storageClassName:                     # storage class name
#  runAsNonRoot: false                     # Boolean value for `securityContext.runAsNonRoot`. Does not apply unless `forceInMemoryLog` is set to `true`. You may have to set this to `false` when running in Minikube
#  resources:                              # Value of `resources` attribute. Can be used to set memory/cpu resources/limits. See the section "Resource configuration" above. Defaults to empty
#  debug:
#    enabled: false                        # Boolean value for enabling debug mode
  
#dapr_rabac:
#  secretReader:
#    enabled: true                         # Deploys a default secret reader Role and RoleBinding
#    namespace: default                    # Namespace for the default secret reader

#dapr_sentry:
#  replicaCount: 1                         # Number of replicas
#  logLevel: info                          # Log level
#  image:
#    name: dapr                            # Docker image name (`global.registry/dapr_sentry.image.name`)
#  tls:
#    issuer:
#      certPEM:                            # Issuer Certificate cert
#      keyPEM:                             # Issuer Private Key cert
#    root:
#      certPEM:                            # Root Certificate cert
#    trustDomain: cluster.local            # Trust domain (logical group to manage app trust relationship) for access control list
#    runAsNonRoot: true                    # Boolean value for `securityContext.runAsNonRoot`. You may have to set this to `false` when running in Minikube
#    resources:                            # Value of `resources` attribute. Can be used to set memory/cpu resources/limits. See the section "Resource configuration" above. Defaults to empty
#    debug:
#      enabled: false                      # Boolean value for enabling debug mode
      
#dapr_sidecar_injector:
#  sidecarImagePullPolicy: IfNotPresent    # Dapr sidecar image pull policy
#  replicaCount: 1                         # Number of replicas
#  logLevel: info                          # Log level
#  image:
#    name: daprd                           # Docker image name for Dapr runtime sidecar to inject into an application (`global.registry/dapr_sidecar_injector.image.name`)
#  injectorImage:
#    name: dapr                            # Docker image name for sidecar injector service (`global.registry/dapr_sidecar_injector.injectorImage.name`)
#  webhookFailurePolicy: Ignore            # Failure policy for the sidecar injector
#  runAsNonRoot: true                      # Boolean value for `securityContext.runAsNonRoot`. You may have to set this to `false` when running in Minikube
#  resources:                              # Value of `resources` attribute. Can be used to set memory/cpu resources/limits. See the section "Resource configuration" above. Defaults to empty
#  debug:
#    enabled: false                        # Boolean value for enabling debug mode
#  kubeClusterDomain: cluster.local        # Domain for this kubernetes cluster. If not set, will auto-detect the cluster domain through the `/etc/resolv.conf` file `search domains` content.
#  ignoreEntrypointTolerations: [{\"effect\":\"NoSchedule\",\"key\":\"alibabacloud.com/eci\"},{\"effect\":\"NoSchedule\",\"key\":\"azure.com/aci\"},{\"effect\":\"NoSchedule\",\"key\":\"aws\"},{\"effect\":\"NoSchedule\",\"key\":\"huawei.com/cci\"}] # JSON array of Kubernetes tolerations. If pod contains any of these tolerations, it will ignore the Docker image ENTRYPOINT for Dapr sidecar.
#  hostNetwork: false                      # Enable hostNetwork mode. This is helpful when working with overlay networks such as Calico CNI and admission webhooks fail
#  healthzPort: 8080                       # The port used for health checks. Helpful in combination with hostNetwork to avoid port collisions