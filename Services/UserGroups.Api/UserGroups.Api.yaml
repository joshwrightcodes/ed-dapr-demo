apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: usergroups-api-otel
  labels:
    app: usergroups-api
spec:
  mode: sidecar
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
      zipkin:
      prometheus:
        config:
          scrape_configs:
            - job_name: "dapr-otel-collector"
              scrape_interval: 5s
              static_configs:
                - targets: ["localhost:9090"]
    processors:
      memory_limiter:
        check_interval: 5s
        limit_mib: 4000
        spike_limit_mib: 500
      batch:
    exporters:
      otlp:
        endpoint: otel-collector:4317
        tls:
          insecure: true
    service:
      pipelines:
        traces:
          receivers: [otlp,zipkin]
          processors: [batch]
          exporters: [otlp]
        metrics:
          receivers: [otlp,prometheus]
          processors: [batch]
          exporters: [otlp]
        logs:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp]
---
apiVersion: dapr.io/v1alpha1
kind: Configuration
metadata:
  name: usergroups-api-daprconfig
  labels:
    app: usergroups-api
spec:
  tracing:
    samplingRate: "1"
    zipkin:
      endpointAddress: "http://localhost:9411/api/v2/spans"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usergroups-api
  labels:
    app: usergroups-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: usergroups-api
  template:
    metadata:
      labels:
        app: usergroups-api
      annotations:
        sidecar.opentelemetry.io/inject: "true"
        dapr.io/enabled: "true"
        dapr.io/app-id: usergroups-api
        dapr.io/log-as-json: "true"
        dapr.io/enable-metrics: "true"
        dapr.io/metrics-port: "9090"
    spec:
      containers:
        - name: usergroups-api
          image: ed-demo/dapr-usergroups-api:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: ASPNETCORE_URLS
              value: http://+:80
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
---
apiVersion: v1
kind: Service
metadata:
  name: usergroups-api
  labels:
    app: usergroups-api
    service: usergroups-api
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: usergroups-api
